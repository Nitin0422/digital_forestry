# Generated by Django 4.2.5 on 2023-09-28 05:25

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=200, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LandInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kitta_number', models.CharField(max_length=200)),
                ('area', models.FloatField()),
                ('gps_longitude', models.FloatField()),
                ('gps_latitude', models.FloatField()),
                ('is_greater_than_10Ha', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='LocalLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='TreeSpecies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Ward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(max_length=1000)),
                ('local_level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.locallevel')),
            ],
        ),
        migrations.CreateModel(
            name='SeedTreeForestInformation',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('tree_type', models.CharField(choices=[('Plantation', 'Plantation'), ('Natural', 'Natural')], default='Plantation', max_length=30)),
                ('tree_code', models.CharField(max_length=200)),
                ('plantation_year', models.IntegerField()),
                ('girth_cm', models.FloatField()),
                ('average_height', models.FloatField()),
                ('land', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='main.landinformation')),
                ('tree_species', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.treespecies')),
            ],
        ),
        migrations.AddField(
            model_name='locallevel',
            name='province',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.province'),
        ),
        migrations.AddField(
            model_name='landinformation',
            name='local_level',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.locallevel'),
        ),
        migrations.AddField(
            model_name='landinformation',
            name='province',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.province'),
        ),
        migrations.AddField(
            model_name='landinformation',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='landinformation',
            name='ward',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.ward'),
        ),
        migrations.CreateModel(
            name='ElectronicTreesModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tree_type', models.CharField(choices=[('Plantation', 'Plantation'), ('Natural', 'Natural')], default='Plantation', max_length=30)),
                ('tree_code', models.CharField(max_length=200)),
                ('plantation_year', models.IntegerField()),
                ('girth_cm', models.FloatField()),
                ('average_height', models.FloatField()),
                ('vol_meter_cube', models.FloatField()),
                ('carbon_content_analysis', models.TextField()),
                ('land', models.OneToOneField(default=0, on_delete=django.db.models.deletion.CASCADE, to='main.landinformation')),
                ('tree_species', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.treespecies')),
            ],
        ),
        migrations.CreateModel(
            name='AccountInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=50)),
                ('address', models.CharField(max_length=50)),
                ('phone_number', models.CharField(max_length=20)),
                ('PAN', models.CharField(max_length=200)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
